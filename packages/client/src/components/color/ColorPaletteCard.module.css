/* ColorPaletteCard.module.css - Updated */
/* TODO: Spec 4.2.1 suggests an artist's paint palette shape.
   This is complex to achieve with CSS alone on the current div structure
   while maintaining content layout and may require SVG or structural HTML changes.
   The "color swatches" aspect mentioned in the spec would also require structural changes
   to the component to pass and render multiple colors. */
.paletteCard {
  display: flex; flex-direction: column; justify-content: space-between;
  padding: var(--space-md); border: 2px solid var(--ui-border-interactive);
  border-radius: var(--radius-lg); box-shadow: var(--shadow-block);
  cursor: pointer; position: relative; overflow: hidden;
  color: var(--ui-text-on-dark);
  transition: transform 0.2s ease-out, box-shadow 0.2s ease-out, opacity 0.3s ease;
}
.mobile { width: 100%; min-height: 80px; flex-direction: row; align-items: center; justify-content: flex-start; gap: var(--space-md); }
.tablet { width: 180px; height: 110px; flex-direction: column; justify-content: center; align-items: center; text-align: center; }
.desktop { width: 200px; height: 120px; flex-direction: column; justify-content: center; align-items: center; text-align: center; }
.textContainer { display: flex; flex-direction: column; gap: var(--space-xxs); z-index: 1; }
.mobile .textContainer { text-align: left; }

.stateName { /* Spec 4.2.1 "Content": Inter Medium, 16px desktop / 14px mobile */
  font-size: var(--font-size-interactive-text-mobile); /* 14px */
  line-height: var(--line-height-body-large); /* Existing, consider var(--line-height-interactive-text) if different */
  font-weight: var(--font-weight-medium);
}
.description { /* Spec 4.2.1 "Content": Inter Medium, 16px desktop / 14px mobile */
  font-size: var(--font-size-interactive-text-mobile); /* 14px */
  line-height: var(--line-height-body-small); /* Existing, consider var(--line-height-interactive-text) */
  font-weight: var(--font-weight-medium);
  opacity: 0.85; /* Existing, keep for now */
}

.tablet .stateName,
.desktop .stateName {
  font-size: var(--font-size-interactive-text-desktop); /* 16px */
}
.tablet .description,
.desktop .description {
  font-size: var(--font-size-interactive-text-desktop); /* 16px */
  /* line-height will use the one from .description base or could be specified if different for desktop */
}

.selected { border-color: var(--ui-accent-primary); box-shadow: 0 0 15px 4px var(--ui-accent-primary), var(--shadow-block); transform: scale(1.02); }
.selected:hover { transform: scale(1.07); }
.disabled { opacity: 0.5; cursor: not-allowed; background: var(--ui-border-container-empty); color: var(--ui-text-secondary); border-color: transparent; box-shadow: none; }
.checkmarkIconWrapper { position: absolute; top: var(--space-xs); right: var(--space-xs); background-color: rgba(var(--ui-accent-primary-rgb), 0.6); border-radius: var(--radius-circular); padding: 3px; display: flex; align-items: center; justify-content: center; z-index: 2; border: 1px solid rgba(255,255,255,0.6); }
.checkmarkIcon { width: 16px; height: 16px; color: var(--ui-text-on-dark); stroke-width: 3; }
.mobile .checkmarkIconWrapper { top: 50%; transform: translateY(-50%); right: var(--space-sm); }
```
